//PROBLEM STATEMENT-
There are N students standing outside the class. The heights of these students is represented by a vector V.
Every student j knows the height of each student i standing in front of him (j>i). Each student tries to find the smallest height Vi greater than him Vj standing in front of him.
If such a student is the tallest among all students then print -1 for that student.

Constraints:
1 <= T <= 100
1 <= N <= 105
1 <= Vi <= 105

Example
Input:
1
5
3 2 5 4 1
Output:
-1 3 -1 5 2

Explanation:
Testcase1: For 3 (j=0) we won't have any element greater than 3 to the left (j>i). For 2 we have 3. For 5 we don't have any greater element. For 4 we have 5, and for 1 we have 2, 3, 4, 5 but we have to choose the smallest
greater element, hence 2.

//SOURCE CODE-

#include<bits/stdc++.h>
using namespace std;
vector<int> greater_height(vector<int>v)
{
    //Your code here
    int n=v.size();
    set<int>s;
    vector<int>res;
    for(int i=0;i<n;i++)
    {
        auto it=s.upper_bound(v[i]);
        if(it==s.end())
            res.push_back(-1);
        else
           res.push_back(*it);
        s.insert(v[i]);
    }
    return res;
}
int main()
{
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        vector<int>v;
        for(int i=0;i<n;i++)
        {
            int k;
            cin>>k;
            v.push_back(k);
        }
        vector<int> result=greater_height(v);
        for(auto i:result)
        {
            cout<<i<<" ";
        }
        cout<<"\n;
    }
    return 0;
}  
