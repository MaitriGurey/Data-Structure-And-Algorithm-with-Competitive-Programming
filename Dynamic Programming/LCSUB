//LONGEST COMMON SUBSTRING
Given two strings ‘X’ and ‘Y’, find the length of the longest common substring. 

Examples : 
Input : X = “abcdxyz”, y = “xyzabcd” 
Output : 4 
Explanation:
The longest common substring is “abcd” and is of length 4.

Input : X = “zxabcdezy”, y = “yzabcdezx” 
Output : 6 
Explanation:
The longest common substring is “abcdez” and is oft length 6.

SOURCE CODE-
//USING TOP DOWN APPROACH
#include<bits/stdc++.h>
using namespcae std;
int LCSUB(string str1,string str2)
{
  int len1=str1.length();
  int len2=str2.length();
  int memo[m+1][n+1];
  for(int i=0;i<len1+1;i++)
  {
    for(int j=0;j<len2+1;j++)
    {
       if(i==0||j==0)
          memo[i][j]=0;
    }
  }
  int maxlength=0;
  for(int i=1;i<len1+1;i++)
  {
    for(int j=1;j<len2+1;j++)
    {
      if(str1[i-1]==str2[j-1])
      {
        memo[i][j]=(1+memo[i-1][j-1]);
        maxlength=max(maxlength,memo[i-1][j-1]);
      }
      else
         memo[i][j]=0;
    }
  }
  return maxlength;
}
int main()
{
  string s1,s2;
  cin>>s1>>s2;
  cout<<LCSUB(s1,s2);
  return 0;
}  
