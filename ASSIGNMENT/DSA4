Question 1
In the Binary Search algorithm, it is suggested to calculate the mid as
beg + (end - beg) / 2 instead of (beg + end) / 2. Why is it so?
ANSWER=>
If we find mid=(beg+end)/2,Then In many cases or For Larger Input of Beg and End we cant't store it which gives us condition of overflow.lets assume beg>=10^10 and end>=10^10 then its mid>=10^10 in this case mid value cant't store it which gives overflow.So For counter this situation we use optimize the code like mid=beg + (end - beg) / 2

Question 2
Write the algorithm/function for Ternary Search.
CODE=>
#include <bits/stdc++.h>
using namespace std;
int ternarySearch(int l, int r, int key, int ar[])
{
    if (r >= l) {
        int mid1 = l + (r - l) / 3;
        int mid2 = r - (r - l) / 3;
        if (ar[mid1] == key) {
            return mid1;
        }
        if (ar[mid2] == key) {
            return mid2;
        }
        if (key < ar[mid1]) {
            return ternarySearch(l, mid1 - 1, key, ar);
        }
        else if (key > ar[mid2]) {
            return ternarySearch(mid2 + 1, r, key, ar);
        }
        else {
            return ternarySearch(mid1 + 1, mid2 - 1, key, ar);
        }
    }
    return -1;
}
