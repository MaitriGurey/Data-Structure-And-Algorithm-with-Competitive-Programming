//Problem Statement-
Given an array, find the nearest smaller element G[i] for every element A[i] in the array such that the element has an index smaller than i.

More formally,

G[i] for an element A[i] is an element A[j] such that 
    j is maximum possible AND 
    j < i AND
    A[j] < A[i]
Elements for which no smaller element exist, consider next smaller element as -1.

Input Format

First line contains an integer N denoting the number of elements in the array (not necessarily distinct).

Second line contains N space separated integers denoting the elements of the array.

Output Format

Print N space separated integers denoting the array G.
Sample Input
8
39 27 11 4 24 32 32 1
Sample Output
-1 -1 -1 -1 4 24 24 -1

//SOURCE CODE-

#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
int main()
{
   ios::sync_with_stdio(0);
   cin.tie(0);
   ll n;
   cin>>n;
   ll arr[n];
   for(ll i=0;i<n;i++)
      cin>>arr[i];
   vector<ll>res;
   stack<ll>s;
   for(int i=0;i<n;i++)
   {
      if(s.size()==0)
         res.push_back(-1);
      else if(s.size()>0 && s.top()<arr[i])
          res.push_back(s.top());
      else if(s.size()>0 && s.top()>=arr[i])
      {
         while(s.size()>0 && s.top()>=arr[i])
             s.pop();
         if(s.size()==0)
            res.push_back(-1);
         else
             res.push_back(s.top());
      }
      s.push(arr[i]);
   }
   for(int i=0;i<res.size();i++)
      cout<<res[i]<<" ";

   return 0;
}
  
