//PROBLEM STATEMENT-

Given a string containing just the characters '(' and ')', find the length of the longest valid (well-formed) parentheses substring.

Example 1:-

Input: s = "(()"
Output: 2
Explanation: The longest valid parentheses substring is "()".

Example 2:-

Input: s = ")()())"
Output: 4
Explanation: The longest valid parentheses substring is "()()"

//SOURCE CODE-

class Solution {
public:
    int longestValidParentheses(string s) {
        
        stack<char>character;
        stack<int>index;
        int res=0;
        index.push(-1);
        
        for(int i=0;i<s.length();i++)
        {
            if(s[i]=='(')
            {
                character.push(s[i]);
                index.push(i);
            }
            else
            {
                if(character.empty())
                    index.push(i);
                else
                {
                    character.pop();
                    index.pop();
                    res=max(res,i-index.top());
                }
            }
        }
        return res;
    }
};
